version: '3'

services:
  goapp: 
    container_name: eda-goapp
    build: 
      context: ./wallet-core
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - 8085:8080
    networks:
      - eda-network
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  init-data:
    container_name: eda-init-data
    image: curlimages/curl:latest
    volumes:
      - ./scripts:/scripts
    entrypoint: ["sh", "/scripts/init-data.sh"]
    networks:
      - eda-network
    depends_on:
      goapp:
        condition: service_healthy
    profiles:
      - init

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    container_name: eda-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    # Desabilitado temporariamente para testes
    # volumes:
    #   - .docker/mysql:/var/lib/mysql
    networks:
      - eda-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - eda-network

  kafka:
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    container_name: eda-kafka
    depends_on:
      - zookeeper
    ports:
    # Exposes 9092 for external connections to the broker
    # Use kafka:29092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - '9092:9092'
      - '29092:29092'
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    networks:
      - eda-network

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: eda-control-center
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 8080
    networks:
      - eda-network
    profiles:
      - monitoring

  balance-service:
    build: ./balance-service
    container_name: eda-balance-service
    ports:
      - "3003:3003"
    depends_on:
      - kafka
      - postgres
    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/balance_db
      - KAFKA_BROKERS=kafka:29092
      - PORT=3003
      - DB_NAME=balance_db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres
      - DB_PORT=5432
    networks:
      - eda-network

  postgres:
    image: postgres:13
    container_name: eda-postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=balance_db
    ports:
      - "5432:5432"
    # Desabilitado temporariamente para testes
    # volumes: 
    #   - postgres_data:/var/lib/postgresql/data
    networks:
      - eda-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: eda-kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
    depends_on:
      - kafka
    networks:
      - eda-network
    profiles:
      - monitoring

# Definição da rede
networks:
  eda-network:
    driver: bridge

volumes:
  postgres_data:
  