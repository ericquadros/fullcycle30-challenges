version: '3.8'

services: 
  nginx:
    image: nginx:latest
    container_name: challenge-nginx
    restart: always
    networks: 
      - node-network
    ports: 
      - "8080:80"
    volumes: 
      - ./nginx/nginx-node.conf:/etc/nginx/conf.d/default.conf
    depends_on: 
      - app

  app:
    build: 
      context: node
    container_name: challenge-nginx-app
    command: sh -c "dockerize -wait tcp://db:3306 -timeout 60s && npm start"
    networks: 
      - node-network
    volumes: 
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "3000:3000"
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpass
      - MYSQL_DATABASE=nodedb
    depends_on: 
      db:
        condition: service_healthy

  db:
    image: mysql:8
    container_name: challenge-nginx-db
    restart: always
    tty: true
    volumes: 
      - ./mysql:/var/lib/mysql
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpass
    ports:
      - "3306:3306"
    networks: 
      - node-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks: 
  node-network:
    driver: bridge